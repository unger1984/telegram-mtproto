{"version":3,"sources":["../../src/util/match-spec.js"],"names":["append","toPairs","chain","allPass","pipe","view","lensPath","makeValidator","value","currentPath","e","selectCase","processSpec","processPair","fieldPath","key","spec","guard","processing","withEmptyPath"],"mappings":"AAGA,SAASA,MAAT,EAAiBC,OAAjB,EAA0BC,KAA1B,EAAiCC,OAAjC,EAA0CC,IAA1C,EAAgDC,IAAhD,EAAsDC,QAAtD;;AAGA,IAAMC,gBAAgBC,SAAUC,WAAD,IAA2BL,KAAKC,KAAKC,SAASG,WAAT,CAAL,CAAL,EAAkCC,KAAKA,MAAMF,KAA7C,CAA1D;;AAEA,IAAMG,aAAaH,SAAS,OAAOA,KAAP,KAAiB,QAAjB,GACxBI,YAAYJ,KAAZ,CADwB,GAExBD,cAAcC,KAAd,CAFJ;;AAIA;AACA,IAAMK,cAAeC,SAAD,IAAyB,CAAC,CAACC,GAAD,EAAMP,KAAN,CAAD,KAAkBG,WAAWH,KAAX,EAAkBR,OAAQe,GAAR,EAAaD,SAAb,CAAlB,CAA/D;;AAEA,IAAMF,cAAeI,IAAD,IAAmBF,SAAD,IAAyBZ,MAAMW,YAAYC,SAAZ,CAAN,EAA8Bb,QAAQe,IAAR,CAA9B,CAA/D;;AAEA;;;;;;AAMA,eAAe,SAASC,KAAT,CAAeD,IAAf,EAAkD;AAC/D,MAAME,aAAaN,YAAYI,IAAZ,CAAnB;AACA,MAAMG,gBAAgBD,WAAW,EAAX,CAAtB;AACA;AACA,SAAOf,QAAQgB,aAAR,CAAP;AACD","file":"match-spec.js","sourcesContent":["//@flow\n\n\nimport { append, toPairs, chain, allPass, pipe, view, lensPath } from 'ramda'\n\n\nconst makeValidator = value => (currentPath: string[]) => pipe(view(lensPath(currentPath)), e => e === value)\n\nconst selectCase = value => typeof value === 'object'\n  ? processSpec(value)\n  : makeValidator(value)\n\n//$off\nconst processPair = (fieldPath: string[]) => ([key, value]) => selectCase(value)(append( key, fieldPath ))\n\nconst processSpec = (spec: Object) => (fieldPath: string[]) => chain(processPair(fieldPath), toPairs(spec))\n\n/**\n * Validate object by given pattern\n *\n * @param {Object} spec\n * @returns {(x: any) => boolean}\n */\nexport default function guard(spec: Object): (x: any) => boolean {\n  const processing = processSpec(spec)\n  const withEmptyPath = processing([])\n  //$off\n  return allPass(withEmptyPath)\n}\n"]}