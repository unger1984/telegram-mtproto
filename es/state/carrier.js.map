{"version":3,"sources":["../../src/state/carrier.js"],"names":["NetMessage","toDCInt","int","makeCarrierAction","payload","type"],"mappings":"AAGA,SAASA,UAAT,QAA2B,kCAA3B;AACA;;;;AAiBA,OAAO,SAASC,OAAT,CAAiBC,GAAjB,EAAqC;AAC1C,SAAOA,GAAP;AACD;;AAED,OAAO,SAASC,iBAAT,CAA2BC,OAA3B,EAA4D;AACjE,SAAO;AACLC,UAAM,qBADD;AAELD;AAFK,GAAP;AAID","file":"carrier.js","sourcesContent":["//@flow\n\n\nimport { NetMessage } from '../service/networker/net-message'\n/*::\nexport opaque type DCInt: number = number\n*/\n\nexport type Carrier = {\n  flags: ACFlags,\n  networker: ACNetworker,\n  auth: ACAuth,\n  homeDC: DCInt,\n  net: ACNet,\n}\n\nexport type ActionCarrier = {\n  type: '[00] action carrier',\n  payload: Carrier,\n}\n\nexport function toDCInt(int: number): DCInt {\n  return int\n}\n\nexport function makeCarrierAction(payload: Carrier): ActionCarrier {\n  return {\n    type: '[00] action carrier',\n    payload,\n  }\n}\n\nexport type ACFlags = {\n  networker: boolean,\n  auth: boolean,\n  homeDC: boolean,\n  net: boolean,\n  // netStatus: boolean,\n}\n\nexport type ACNetworker = {\n  ids: DCInt[],\n  [dc: number]: {\n    authKey: number[],\n    salt: number[],\n    session: number[],\n  },\n}\n\nexport type ACAuth = {\n  authKey: DCInt[],\n  salt: DCInt[],\n  session: DCInt[],\n}\n\nexport type ACNet = {\n  flags: {\n    sent: {\n      add: boolean,\n      delete: boolean,\n    },\n    // send: boolean,\n    // response: boolean,\n  },\n  sent: {\n    add: NetMessage[],\n    delete: NetMessage[],\n  }\n}\n"]}